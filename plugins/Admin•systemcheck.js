
let handler = async (m, { conn, isROwner }) => {
    if (!isROwner) {
        return conn.reply(m.chat, '‚ùå Solo el propietario puede usar este comando.', m)
    }
    
    try {
        let errors = []
        let warnings = []
        let info = []
        
        // Verificar base de datos
        if (!global.db) {
            errors.push('‚ùå Base de datos no inicializada')
        } else {
            info.push('‚úÖ Base de datos activa')
            
            // Verificar estructura de chats
            if (!global.db.data.chats) {
                errors.push('‚ùå Estructura de chats no encontrada')
            } else {
                let totalChats = Object.keys(global.db.data.chats).length
                let bannedChats = Object.values(global.db.data.chats).filter(chat => chat.isBanned).length
                info.push(`üìä Total chats: ${totalChats} (${bannedChats} baneados)`)
            }
            
            // Verificar estructura de usuarios
            if (!global.db.data.users) {
                errors.push('‚ùå Estructura de usuarios no encontrada')
            } else {
                let totalUsers = Object.keys(global.db.data.users).length
                let bannedUsers = Object.values(global.db.data.users).filter(user => user.banned).length
                info.push(`üë• Total usuarios: ${totalUsers} (${bannedUsers} baneados)`)
            }
        }
        
        // Verificar plugins cr√≠ticos
        const criticalPlugins = [
            'grupo-banchat.js',
            'grupo-unbanchat.js',
            'Owner‚Ä¢banchat.js',
            'Owner‚Ä¢unbanchat.js',
            'Admin‚Ä¢resetconfig.js'
        ]
        
        for (let plugin of criticalPlugins) {
            if (!global.plugins[plugin]) {
                warnings.push(`‚ö†Ô∏è Plugin cr√≠tico no cargado: ${plugin}`)
            }
        }
        
        // Verificar configuraci√≥n
        if (!global.opts) {
            errors.push('‚ùå Configuraci√≥n global no encontrada')
        }
        
        // Verificar conexi√≥n
        if (!conn.user) {
            errors.push('‚ùå Bot no conectado correctamente')
        } else {
            info.push(`ü§ñ Bot conectado como: ${conn.user.name}`)
        }
        
        // Generar reporte
        let report = `üîç *ùôéùôÉùôäùôîùôä ùôÉùôÑùôâùòºùôèùòº ·Éù·É´  ùòΩ ÍÇ¶ ·éø - DIAGN√ìSTICO SISTEMA*\n\n`
        
        if (errors.length > 0) {
            report += `*üö® ERRORES CR√çTICOS:*\n${errors.join('\n')}\n\n`
        }
        
        if (warnings.length > 0) {
            report += `*‚ö†Ô∏è ADVERTENCIAS:*\n${warnings.join('\n')}\n\n`
        }
        
        if (info.length > 0) {
            report += `*‚ÑπÔ∏è INFORMACI√ìN:*\n${info.join('\n')}\n\n`
        }
        
        report += `*üìä RESUMEN:*\n`
        report += `‚Ä¢ Errores: ${errors.length}\n`
        report += `‚Ä¢ Advertencias: ${warnings.length}\n`
        report += `‚Ä¢ Estado: ${errors.length === 0 ? '‚úÖ Saludable' : '‚ùå Requiere atenci√≥n'}\n\n`
        report += `_Fecha: ${new Date().toLocaleString()}_`
        
        await conn.reply(m.chat, report, m)
        
    } catch (e) {
        console.error('Error en systemcheck:', e)
        await conn.reply(m.chat, `‚ùå Error al realizar diagn√≥stico: ${e.message}`, m)
    }
}

handler.help = ['systemcheck', 'diagnostico']
handler.tags = ['owner']
handler.command = /^(systemcheck|diagnostico|checkbot)$/i
handler.rowner = true

export default handler
